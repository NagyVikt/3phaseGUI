okey now the main shoud use the {"V":"2", "S":"step"} pmod_settings.json {
    "P8382700": {
        "steps": 1
    },
    "P8382730": {
        "steps": 1
    },
    "P8378748": {
        "steps": 1
    },
    "P8378749": {
        "steps": 1
    },
    "P8382698": {
        "steps": 1
    },
    "P8382699": {
        "steps": 1
    },
    "P8378692": {
        "steps": 1
    },
    "P8382728": {
        "steps": 1
    },
    "P8382741": {
        "steps": 1
    },
    "P8378690": {
        "steps": 1
    },
    "P8382731": {
        "steps": 1
    },
    "P8382743": {
        "steps": 1
    },
    "P8378691": {
        "steps": 1
    },
    "P8378765": {
        "steps": 1
    },
    "P8378764": {
        "steps": 1
    },
    "P8378763": {
        "steps": 1
    },
    "P8378747": {
        "steps": 1
    },
    "P8382742": {
        "steps": 1
    }
} and the ksk_pmod.json: {
    "830569527810": {
        "pmod": "P8378690"
    },
    "830569527811": {
        "pmod": "P8378690"
    },
    "830569527812": {
        "pmod": "P8378690"
    },
    "830569527813": {
        "pmod": "P8378690"
    },
    "830569527814": {
        "pmod": "P8378690"
    },
    "830569527815": {
        "pmod": "P8378690"
    },
    "830569527816": {
        "pmod": "P8378690"
    },
    "830569527817": {
        "pmod": "P8378690"
    },
    "830569527818": {
        "pmod": "P8378690"
    },
    "830569527819": {
        "pmod": "P8378690"
    },
    "830569527820": {
        "pmod": "P8378690"
    },
    "830569527821": {
        "pmod": "P8378690"
    },
    "830569527822": {
        "pmod": "P8378690"
    },
    "830569527823": {
        "pmod": "P8378690"
    },
    "830569527824": {
        "pmod": "P8378690"
    },
    "830569527825": {
        "pmod": "P8378690"
    },
    "830569527826": {
        "pmod": "P8378690"
    },
    "830569527827": {
        "pmod": "P8378690"
    },
    "830569527828": {
        "pmod": "P8378690"
    },
    "830569527829": {
        "pmod": "P8378690"
    },
    "830569527830": {
        "pmod": "P8378690"
    },
    "830569527831": {
        "pmod": "P8378690"
    },
    "830569527832": {
        "pmod": "P8378690"
    },
    "830569527833": {
        "pmod": "P8378690"
    },
    "830569527834": {
        "pmod": "P8378690"
    },
    "830569527835": {
        "pmod": "P8378690"
    },
    "830569527836": {
        "pmod": "P8378690"
    },
    "830569527837": {
        "pmod": "P8378690"
    },
    "830569527838": {
        "pmod": "P8378690"
    },
    "830569527839": {
        "pmod": "P8378690"
    },
    "830569527840": {
        "pmod": "P8378690"
    },
    "830569527841": {
        "pmod": "P8378690"
    },
    "830569527842": {
        "pmod": "P8378690"
    },
    "830569527843": {
        "pmod": "P8378690"
    },
    "830569527844": {
        "pmod": "P8378690"
    },
    "830569527845": {
        "pmod": "P8378690"
    },
    "830569527846": {
        "pmod": "P8378690"
    },
    "830569527847": {
        "pmod": "P8378690"
    },
    "830569527848": {
        "pmod": "P8378690"
    },
    "830569527849": {
        "pmod": "P8378690"
    },
    "830569527850": {
        "pmod": "P8378690"
    },
    "830569527851": {
        "pmod": "P8378690"
    },
    "830569527852": {
        "pmod": "P8378690"
    },
    "830569527853": {
        "pmod": "P8378690"
    },
    "830569527854": {
        "pmod": "P8378690"
    },
    "830569527855": {
        "pmod": "P8378691"
    },
    "830569527856": {
        "pmod": "P8378691"
    },
    "830569527857": {
        "pmod": "P8378691"
    },
    "830569527858": {
        "pmod": "P8378691"
    },
    "830569527859": {
        "pmod": "P8378691"
    },
    "830569527860": {
        "pmod": "P8378691"
    },
    "830569527861": {
        "pmod": "P8378691"
    },
    "830569527862": {
        "pmod": "P8378691"
    },
    "830569527863": {
        "pmod": "P8378691"
    },
    "830569527864": {
        "pmod": "P8378691"
    },
    "830569527865": {
        "pmod": "P8378691"
    },
    "830569527866": {
        "pmod": "P8378691"
    },
    "830569527867": {
        "pmod": "P8378691"
    },
    "830569527868": {
        "pmod": "P8378691"
    },
    "830569527869": {
        "pmod": "P8378691"
    },
    "830569527870": {
        "pmod": "P8378691"
    },
    "830569527871": {
        "pmod": "P8378691"
    },
    "830569527872": {
        "pmod": "P8378691"
    },
    "830569527873": {
        "pmod": "P8378691"
    },
    "830569527874": {
        "pmod": "P8378691"
    },
    "830569527875": {
        "pmod": "P8378691"
    },
    "830569527876": {
        "pmod": "P8378691"
    },
    "830569527877": {
        "pmod": "P8378691"
    },
    "830569527878": {
        "pmod": "P8378691"
    },
    "830569527879": {
        "pmod": "P8378691"
    },
    "830569527880": {
        "pmod": "P8378691"
    },
    "830569527881": {
        "pmod": "P8378691"
    },
    "830569527882": {
        "pmod": "P8378691"
    },
    "830569527883": {
        "pmod": "P8378691"
    },
    "830569527884": {
        "pmod": "P8378691"
    },
    "830569527885": {
        "pmod": "P8378691"
    },
    "830569527886": {
        "pmod": "P8378691"
    },
    "830569527887": {
        "pmod": "P8378691"
    },
    "830569527888": {
        "pmod": "P8378691"
    },
    "830569527889": {
        "pmod": "P8378691"
    },
    "830569527890": {
        "pmod": "P8378691"
    },
    "830569527891": {
        "pmod": "P8378691"
    },
    "830569527892": {
        "pmod": "P8378691"
    },
    "830569527893": {
        "pmod": "P8378691"
    },
    "830569527894": {
        "pmod": "P8378691"
    },
    "830569527895": {
        "pmod": "P8378691"
    },
    "830569527896": {
        "pmod": "P8378691"
    },
    "830569527897": {
        "pmod": "P8378691"
    },
    "830569527898": {
        "pmod": "P8378691"
    },
    "830569527899": {
        "pmod": "P8378691"
    },
    "830569527900": {
        "pmod": "P8378692"
    },
    "830569527901": {
        "pmod": "P8378692"
    },
    "830569527902": {
        "pmod": "P8378692"
    },
    "830569527903": {
        "pmod": "P8378692"
    },
    "830569527904": {
        "pmod": "P8378692"
    },
    "830569527905": {
        "pmod": "P8378692"
    },
    "830569527906": {
        "pmod": "P8378692"
    },
    "830569527907": {
        "pmod": "P8378692"
    },
    "830569527908": {
        "pmod": "P8378692"
    },
    "830569527909": {
        "pmod": "P8378692"
    },
    "830569527910": {
        "pmod": "P8378692"
    },
    "830569527911": {
        "pmod": "P8378692"
    },
    "830569527912": {
        "pmod": "P8378692"
    },
    "830569527913": {
        "pmod": "P8378692"
    },
    "830569527914": {
        "pmod": "P8378692"
    },
    "830569527915": {
        "pmod": "P8378692"
    },
    "830569527916": {
        "pmod": "P8378692"
    },
    "830569527917": {
        "pmod": "P8378692"
    },
    "830569527918": {
        "pmod": "P8378692"
    },
    "830569527919": {
        "pmod": "P8378692"
    },
    "830569527920": {
        "pmod": "P8378692"
    },
    "830569527921": {
        "pmod": "P8378692"
    },
    "830569527922": {
        "pmod": "P8378692"
    },
    "830569527923": {
        "pmod": "P8378692"
    },
    "830569527924": {
        "pmod": "P8378692"
    },
    "830569527925": {
        "pmod": "P8378692"
    },
    "830569527926": {
        "pmod": "P8378692"
    },
    "830569527927": {
        "pmod": "P8378692"
    },
    "830569527928": {
        "pmod": "P8378692"
    },
    "830569527929": {
        "pmod": "P8378692"
    },
    "830569527930": {
        "pmod": "P8378692"
    },
    "830569527931": {
        "pmod": "P8378692"
    },
    "830569527932": {
        "pmod": "P8378692"
    },
    "830569527933": {
        "pmod": "P8378692"
    },
    "830569527934": {
        "pmod": "P8378692"
    },
    "830569527935": {
        "pmod": "P8378692"
    },
    "830569527936": {
        "pmod": "P8378692"
    },
    "830569527937": {
        "pmod": "P8378692"
    },
    "830569527938": {
        "pmod": "P8378692"
    },
    "830569527939": {
        "pmod": "P8378692"
    },
    "830569527940": {
        "pmod": "P8378692"
    },
    "830569527941": {
        "pmod": "P8378692"
    },
    "830569527942": {
        "pmod": "P8378692"
    },
    "830569527943": {
        "pmod": "P8378692"
    },
    "830569527944": {
        "pmod": "P8378692"
    },
    "830569528085": {
        "pmod": "P8378747"
    },
    "830569528086": {
        "pmod": "P8378747"
    },
    "830569528087": {
        "pmod": "P8378747"
    },
    "830569528088": {
        "pmod": "P8378747"
    },
    "830569528089": {
        "pmod": "P8378747"
    },
    "830569528090": {
        "pmod": "P8378747"
    },
    "830569528091": {
        "pmod": "P8378747"
    },
    "830569528092": {
        "pmod": "P8378747"
    },
    "830569528093": {
        "pmod": "P8378747"
    },
    "830569528094": {
        "pmod": "P8378747"
    },
    "830569528095": {
        "pmod": "P8378747"
    },
    "830569528096": {
        "pmod": "P8378747"
    },
    "830569528097": {
        "pmod": "P8378747"
    },
    "830569528098": {
        "pmod": "P8378747"
    },
    "830569528099": {
        "pmod": "P8378747"
    },
    "830569528100": {
        "pmod": "P8378748"
    },
    "830569528101": {
        "pmod": "P8378748"
    },
    "830569528102": {
        "pmod": "P8378748"
    },
    "830569528103": {
        "pmod": "P8378748"
    },
    "830569528104": {
        "pmod": "P8378748"
    },
    "830569528105": {
        "pmod": "P8378748"
    },
    "830569528106": {
        "pmod": "P8378748"
    },
    "830569528107": {
        "pmod": "P8378748"
    },
    "830569528108": {
        "pmod": "P8378748"
    },
    "830569528109": {
        "pmod": "P8378748"
    },
    "830569528110": {
        "pmod": "P8378748"
    },
    "830569528111": {
        "pmod": "P8378748"
    },
    "830569528112": {
        "pmod": "P8378748"
    },
    "830569528113": {
        "pmod": "P8378748"
    },
    "830569528114": {
        "pmod": "P8378748"
    },
    "830569528115": {
        "pmod": "P8378749"
    },
    "830569528116": {
        "pmod": "P8378749"
    },
    "830569528117": {
        "pmod": "P8378749"
    },
    "830569528118": {
        "pmod": "P8378749"
    },
    "830569528119": {
        "pmod": "P8378749"
    },
    "830569528120": {
        "pmod": "P8378749"
    },
    "830569528121": {
        "pmod": "P8378749"
    },
    "830569528122": {
        "pmod": "P8378749"
    },
    "830569528123": {
        "pmod": "P8378749"
    },
    "830569528124": {
        "pmod": "P8378749"
    },
    "830569528125": {
        "pmod": "P8378749"
    },
    "830569528126": {
        "pmod": "P8378749"
    },
    "830569528127": {
        "pmod": "P8378749"
    },
    "830569528128": {
        "pmod": "P8378749"
    },
    "830569528129": {
        "pmod": "P8378749"
    },
    "830569528130": {
        "pmod": "P8378763"
    },
    "830569528131": {
        "pmod": "P8378764"
    },
    "830569528132": {
        "pmod": "P8378765"
    },
    "830569528148": {
        "pmod": "P8382698"
    },
    "830569528149": {
        "pmod": "P8382698"
    },
    "830569528150": {
        "pmod": "P8382698"
    },
    "830569528151": {
        "pmod": "P8382698"
    },
    "830569528152": {
        "pmod": "P8382698"
    },
    "830569528153": {
        "pmod": "P8382698"
    },
    "830569528154": {
        "pmod": "P8382698"
    },
    "830569528155": {
        "pmod": "P8382698"
    },
    "830569528156": {
        "pmod": "P8382698"
    },
    "830569528157": {
        "pmod": "P8382698"
    },
    "830569528158": {
        "pmod": "P8382698"
    },
    "830569528159": {
        "pmod": "P8382698"
    },
    "830569528160": {
        "pmod": "P8382698"
    },
    "830569528161": {
        "pmod": "P8382698"
    },
    "830569528162": {
        "pmod": "P8382698"
    },
    "830569528163": {
        "pmod": "P8382698"
    },
    "830569528164": {
        "pmod": "P8382698"
    },
    "830569528165": {
        "pmod": "P8382698"
    },
    "830569528166": {
        "pmod": "P8382698"
    },
    "830569528167": {
        "pmod": "P8382698"
    },
    "830569528168": {
        "pmod": "P8382699"
    },
    "830569528169": {
        "pmod": "P8382699"
    },
    "830569528170": {
        "pmod": "P8382699"
    },
    "830569528171": {
        "pmod": "P8382699"
    },
    "830569528172": {
        "pmod": "P8382699"
    },
    "830569528173": {
        "pmod": "P8382699"
    },
    "830569528174": {
        "pmod": "P8382699"
    },
    "830569528175": {
        "pmod": "P8382699"
    },
    "830569528176": {
        "pmod": "P8382699"
    },
    "830569528177": {
        "pmod": "P8382699"
    },
    "830569528178": {
        "pmod": "P8382699"
    },
    "830569528179": {
        "pmod": "P8382699"
    },
    "830569528180": {
        "pmod": "P8382699"
    },
    "830569528181": {
        "pmod": "P8382699"
    },
    "830569528182": {
        "pmod": "P8382699"
    },
    "830569528183": {
        "pmod": "P8382699"
    },
    "830569528184": {
        "pmod": "P8382699"
    },
    "830569528185": {
        "pmod": "P8382699"
    },
    "830569528186": {
        "pmod": "P8382699"
    },
    "830569528187": {
        "pmod": "P8382699"
    },
    "830569528188": {
        "pmod": "P8382700"
    },
    "830569528189": {
        "pmod": "P8382700"
    },
    "830569528190": {
        "pmod": "P8382700"
    },
    "830569528191": {
        "pmod": "P8382700"
    },
    "830569528192": {
        "pmod": "P8382700"
    },
    "830569528193": {
        "pmod": "P8382700"
    },
    "830569528194": {
        "pmod": "P8382700"
    },
    "830569528195": {
        "pmod": "P8382700"
    },
    "830569528196": {
        "pmod": "P8382700"
    },
    "830569528197": {
        "pmod": "P8382700"
    },
    "830569528198": {
        "pmod": "P8382700"
    },
    "830569528199": {
        "pmod": "P8382700"
    },
    "830569528200": {
        "pmod": "P8382700"
    },
    "830569528201": {
        "pmod": "P8382700"
    },
    "830569528202": {
        "pmod": "P8382700"
    },
    "830569528203": {
        "pmod": "P8382700"
    },
    "830569528204": {
        "pmod": "P8382700"
    },
    "830569528205": {
        "pmod": "P8382700"
    },
    "830569528206": {
        "pmod": "P8382700"
    },
    "830569528207": {
        "pmod": "P8382700"
    },
    "830569528208": {
        "pmod": "P8382728"
    },
    "830569528209": {
        "pmod": "P8382728"
    },
    "830569528210": {
        "pmod": "P8382728"
    },
    "830569528211": {
        "pmod": "P8382728"
    },
    "830569528212": {
        "pmod": "P8382728"
    },
    "830569528213": {
        "pmod": "P8382728"
    },
    "830569528214": {
        "pmod": "P8382728"
    },
    "830569528215": {
        "pmod": "P8382728"
    },
    "830569528216": {
        "pmod": "P8382728"
    },
    "830569528217": {
        "pmod": "P8382728"
    },
    "830569528218": {
        "pmod": "P8382728"
    },
    "830569528219": {
        "pmod": "P8382728"
    },
    "830569528220": {
        "pmod": "P8382730"
    },
    "830569528221": {
        "pmod": "P8382730"
    },
    "830569528222": {
        "pmod": "P8382730"
    },
    "830569528223": {
        "pmod": "P8382730"
    },
    "830569528224": {
        "pmod": "P8382730"
    },
    "830569528225": {
        "pmod": "P8382730"
    },
    "830569528226": {
        "pmod": "P8382730"
    },
    "830569528227": {
        "pmod": "P8382730"
    },
    "830569528228": {
        "pmod": "P8382730"
    },
    "830569528229": {
        "pmod": "P8382730"
    },
    "830569528230": {
        "pmod": "P8382730"
    },
    "830569528231": {
        "pmod": "P8382730"
    },
    "830569528232": {
        "pmod": "P8382731"
    },
    "830569528233": {
        "pmod": "P8382731"
    },
    "830569528234": {
        "pmod": "P8382731"
    },
    "830569528235": {
        "pmod": "P8382731"
    },
    "830569528236": {
        "pmod": "P8382731"
    },
    "830569528237": {
        "pmod": "P8382731"
    },
    "830569528238": {
        "pmod": "P8382731"
    },
    "830569528239": {
        "pmod": "P8382731"
    },
    "830569528240": {
        "pmod": "P8382731"
    },
    "830569528241": {
        "pmod": "P8382731"
    },
    "830569528242": {
        "pmod": "P8382731"
    },
    "830569528243": {
        "pmod": "P8382731"
    },
    "830569528244": {
        "pmod": "P8382741"
    },
    "830569528245": {
        "pmod": "P8382741"
    },
    "830569528246": {
        "pmod": "P8382741"
    },
    "830569528247": {
        "pmod": "P8382741"
    },
    "830569528248": {
        "pmod": "P8382741"
    },
    "830569528249": {
        "pmod": "P8382741"
    },
    "830569528250": {
        "pmod": "P8382741"
    },
    "830569528251": {
        "pmod": "P8382741"
    },
    "830569528252": {
        "pmod": "P8382741"
    },
    "830569528253": {
        "pmod": "P8382741"
    },
    "830569528254": {
        "pmod": "P8382741"
    },
    "830569528255": {
        "pmod": "P8382741"
    },
    "830569528256": {
        "pmod": "P8382741"
    },
    "830569528257": {
        "pmod": "P8382741"
    },
    "830569528258": {
        "pmod": "P8382741"
    },
    "830569528259": {
        "pmod": "P8382741"
    },
    "830569528260": {
        "pmod": "P8382741"
    },
    "830569528261": {
        "pmod": "P8382741"
    },
    "830569528262": {
        "pmod": "P8382741"
    },
    "830569528263": {
        "pmod": "P8382741"
    },
    "830569528264": {
        "pmod": "P8382741"
    },
    "830569528265": {
        "pmod": "P8382741"
    },
    "830569528266": {
        "pmod": "P8382741"
    },
    "830569528267": {
        "pmod": "P8382741"
    },
    "830569528268": {
        "pmod": "P8382741"
    },
    "830569528269": {
        "pmod": "P8382741"
    },
    "830569528270": {
        "pmod": "P8382741"
    },
    "830569528271": {
        "pmod": "P8382741"
    },
    "830569528272": {
        "pmod": "P8382741"
    },
    "830569528273": {
        "pmod": "P8382741"
    },
    "830569528274": {
        "pmod": "P8382741"
    },
    "830569528275": {
        "pmod": "P8382741"
    },
    "830569528276": {
        "pmod": "P8382741"
    },
    "830569528277": {
        "pmod": "P8382741"
    },
    "830569528278": {
        "pmod": "P8382741"
    },
    "830569528279": {
        "pmod": "P8382741"
    },
    "830569528280": {
        "pmod": "P8382741"
    },
    "830569528281": {
        "pmod": "P8382741"
    },
    "830569528282": {
        "pmod": "P8382741"
    },
    "830569528283": {
        "pmod": "P8382741"
    },
    "830569528284": {
        "pmod": "P8382741"
    },
    "830569528285": {
        "pmod": "P8382741"
    },
    "830569528286": {
        "pmod": "P8382741"
    },
    "830569528287": {
        "pmod": "P8382741"
    },
    "830569528288": {
        "pmod": "P8382741"
    },
    "830569528289": {
        "pmod": "P8382741"
    },
    "830569528290": {
        "pmod": "P8382741"
    },
    "830569528291": {
        "pmod": "P8382741"
    },
    "830569528292": {
        "pmod": "P8382741"
    },
    "830569528293": {
        "pmod": "P8382741"
    },
    "830569528294": {
        "pmod": "P8382742"
    },
    "830569528295": {
        "pmod": "P8382742"
    },
    "830569528296": {
        "pmod": "P8382742"
    },
    "830569528297": {
        "pmod": "P8382742"
    },
    "830569528298": {
        "pmod": "P8382742"
    },
    "830569528299": {
        "pmod": "P8382742"
    },
    "830569528300": {
        "pmod": "P8382742"
    },
    "830569528301": {
        "pmod": "P8382742"
    },
    "830569528302": {
        "pmod": "P8382742"
    },
    "830569528303": {
        "pmod": "P8382742"
    },
    "830569528304": {
        "pmod": "P8382742"
    },
    "830569528305": {
        "pmod": "P8382742"
    },
    "830569528306": {
        "pmod": "P8382742"
    },
    "830569528307": {
        "pmod": "P8382742"
    },
    "830569528308": {
        "pmod": "P8382742"
    },
    "830569528309": {
        "pmod": "P8382742"
    },
    "830569528310": {
        "pmod": "P8382742"
    },
    "830569528311": {
        "pmod": "P8382742"
    },
    "830569528312": {
        "pmod": "P8382742"
    },
    "830569528313": {
        "pmod": "P8382742"
    },
    "830569528314": {
        "pmod": "P8382742"
    },
    "830569528315": {
        "pmod": "P8382742"
    },
    "830569528316": {
        "pmod": "P8382742"
    },
    "830569528317": {
        "pmod": "P8382742"
    },
    "830569528318": {
        "pmod": "P8382742"
    },
    "830569528319": {
        "pmod": "P8382742"
    },
    "830569528320": {
        "pmod": "P8382742"
    },
    "830569528321": {
        "pmod": "P8382742"
    },
    "830569528322": {
        "pmod": "P8382742"
    },
    "830569528323": {
        "pmod": "P8382742"
    },
    "830569528324": {
        "pmod": "P8382742"
    },
    "830569528325": {
        "pmod": "P8382742"
    },
    "830569528326": {
        "pmod": "P8382742"
    },
    "830569528327": {
        "pmod": "P8382742"
    },
    "830569528328": {
        "pmod": "P8382742"
    },
    "830569528329": {
        "pmod": "P8382742"
    },
    "830569528330": {
        "pmod": "P8382742"
    },
    "830569528331": {
        "pmod": "P8382742"
    },
    "830569528332": {
        "pmod": "P8382742"
    },
    "830569528333": {
        "pmod": "P8382742"
    },
    "830569528334": {
        "pmod": "P8382742"
    },
    "830569528335": {
        "pmod": "P8382742"
    },
    "830569528336": {
        "pmod": "P8382742"
    },
    "830569528337": {
        "pmod": "P8382742"
    },
    "830569528338": {
        "pmod": "P8382742"
    },
    "830569528339": {
        "pmod": "P8382742"
    },
    "830569528340": {
        "pmod": "P8382742"
    },
    "830569528341": {
        "pmod": "P8382742"
    },
    "830569528342": {
        "pmod": "P8382742"
    },
    "830569528343": {
        "pmod": "P8382742"
    },
    "830569528344": {
        "pmod": "P8382743"
    },
    "830569528345": {
        "pmod": "P8382743"
    },
    "830569528346": {
        "pmod": "P8382743"
    },
    "830569528347": {
        "pmod": "P8382743"
    },
    "830569528348": {
        "pmod": "P8382743"
    },
    "830569528349": {
        "pmod": "P8382743"
    },
    "830569528350": {
        "pmod": "P8382743"
    },
    "830569528351": {
        "pmod": "P8382743"
    },
    "830569528352": {
        "pmod": "P8382743"
    },
    "830569528353": {
        "pmod": "P8382743"
    },
    "830569528354": {
        "pmod": "P8382743"
    },
    "830569528355": {
        "pmod": "P8382743"
    },
    "830569528356": {
        "pmod": "P8382743"
    },
    "830569528357": {
        "pmod": "P8382743"
    },
    "830569528358": {
        "pmod": "P8382743"
    },
    "830569528359": {
        "pmod": "P8382743"
    },
    "830569528360": {
        "pmod": "P8382743"
    },
    "830569528361": {
        "pmod": "P8382743"
    },
    "830569528362": {
        "pmod": "P8382743"
    },
    "830569528363": {
        "pmod": "P8382743"
    },
    "830569528364": {
        "pmod": "P8382743"
    },
    "830569528365": {
        "pmod": "P8382743"
    },
    "830569528366": {
        "pmod": "P8382743"
    },
    "830569528367": {
        "pmod": "P8382743"
    },
    "830569528368": {
        "pmod": "P8382743"
    },
    "830569528369": {
        "pmod": "P8382743"
    },
    "830569528370": {
        "pmod": "P8382743"
    },
    "830569528371": {
        "pmod": "P8382743"
    },
    "830569528372": {
        "pmod": "P8382743"
    },
    "830569528373": {
        "pmod": "P8382743"
    },
    "830569528374": {
        "pmod": "P8382743"
    },
    "830569528375": {
        "pmod": "P8382743"
    },
    "830569528376": {
        "pmod": "P8382743"
    },
    "830569528377": {
        "pmod": "P8382743"
    },
    "830569528378": {
        "pmod": "P8382743"
    },
    "830569528379": {
        "pmod": "P8382743"
    },
    "830569528380": {
        "pmod": "P8382743"
    },
    "830569528381": {
        "pmod": "P8382743"
    },
    "830569528382": {
        "pmod": "P8382743"
    },
    "830569528383": {
        "pmod": "P8382743"
    },
    "830569528384": {
        "pmod": "P8382743"
    },
    "830569528385": {
        "pmod": "P8382743"
    },
    "830569528386": {
        "pmod": "P8382743"
    },
    "830569528387": {
        "pmod": "P8382743"
    },
    "830569528388": {
        "pmod": "P8382743"
    },
    "830569528389": {
        "pmod": "P8382743"
    },
    "830569528390": {
        "pmod": "P8382743"
    },
    "830569528391": {
        "pmod": "P8382743"
    },
    "830569528392": {
        "pmod": "P8382743"
    },
    "830569528393": {
        "pmod": "P8382743"
    }
} so when we scan a data like 830569528393 it search in the ksk_pmod.json and after when found the pmod of it search in the pmod_settings.json: {
    "P8382700": {
        "steps": 1
    },
    "P8382730": {
        "steps": 1
    },
    "P8378748": {
        "steps": 1
    },
    "P8378749": {
        "steps": 1
    },
    "P8382698": {
        "steps": 1
    },
    "P8382699": {
        "steps": 1
    },
    "P8378692": {
        "steps": 1
    },
    "P8382728": {
        "steps": 1
    },
    "P8382741": {
        "steps": 1
    },
    "P8378690": {
        "steps": 1
    },
    "P8382731": {
        "steps": 1
    },
    "P8382743": {
        "steps": 1
    },
    "P8378691": {
        "steps": 1
    },
    "P8378765": {
        "steps": 1
    },
    "P8378764": {
        "steps": 1
    },
    "P8378763": {
        "steps": 1
    },
    "P8378747": {
        "steps": 1
    },
    "P8382742": {
        "steps": 1
    }
} AND WE SEND TO THE MACHINE THIS SYNTAX {"V":"2", "S":"steps"}  import pandas as pd
import json
import os
import time
import serial
import threading
import tkinter as tk
import platform
import sys

# Állítsd be a fullscreen változót True-ra a teljes képernyős mód aktiválásához
fullscreen = True

class SimpleSerialApp:
    def __init__(self, master):
        self.master = master
        self.master.title("Simple Serial App")

        # Teljes képernyős mód beállítása az operációs rendszer alapján
        current_os = platform.system()
        if current_os == 'Windows':
            try:
                self.master.state('zoomed')  # Windows
            except:
                pass  # Ha hiba történik, figyelmen kívül hagyjuk
        elif current_os in ['Linux', 'Darwin']:
            try:
                self.master.attributes('-fullscreen', fullscreen)  # Unix/Linux/Mac
            except:
                # Ha '-fullscreen' nem működik, állítsd be az ablak méretét manuálisan
                screen_width = self.master.winfo_screenwidth()
                screen_height = self.master.winfo_screenheight()
                self.master.geometry(f"{screen_width}x{screen_height}+0+0")

        # Kilépés a teljes képernyős módból az Escape billentyűvel
        self.master.bind("<Escape>", self.exit_fullscreen)

        # Inicializáljuk a soros portot
        try:
            self.ser = serial.Serial('/dev/cino', 9600, timeout=1)
            print("Soros port sikeresen megnyitva.")
        except serial.SerialException as e:
            print(f"Serial Port Error: Could not open serial port: {e}")
            self.ser = None

        # Adatok betöltése
        try:
            file_path = '3Phase-KSK-KW2-2025.xlsx'
            self.ksk_table = pd.read_excel(file_path, sheet_name='KSK')
            self.table_3pass = pd.read_excel(file_path, sheet_name='3pass')
            # We may still want to read db.json if it has some data, or ignore it altogether
            with open('db.json', 'r') as f:
                self.db_data = json.load(f)
            print("Adatok sikeresen betöltve.")
        except Exception as e:
            print(f"Data Loading Error: Failed to load data: {e}")
            self.ksk_table = pd.DataFrame()
            self.table_3pass = pd.DataFrame()
            self.db_data = []

        # GUI komponensek létrehozása
        self.create_widgets()

        # Szkenner figyelése
        self.scanner_device = '/dev/scan'
        if os.path.exists(self.scanner_device):
            threading.Thread(
                target=self.read_from_scanner, 
                args=(self.scanner_device,), 
                daemon=True
            ).start()
            print(f"Szkenner eszköz figyelése: {self.scanner_device}")
        else:
            print(f"Scanner device not found: {self.scanner_device}")

        # HOME szekvencia indítása, de csak miután megérkezett a BOOT_OK
        if self.ser:
            threading.Thread(target=self.wait_for_boot_ok, daemon=True).start()

    def wait_for_boot_ok(self):
        """Várakozás a BOOT_OK parancsra a soros porttól."""
        if self.ser and self.ser.is_open:
            try:
                print("Waiting for BOOT_OK...")
                while True:
                    response = self.ser.readline().decode('utf-8', errors='ignore').strip()
                    if response == "BOOT_OK":
                        print("BOOT_OK received.")
                        # Miután megérkezett a BOOT_OK, elindítjuk a HOME szekvenciát
                        self.run_home_sequence()
                        break
                    elif response:
                        print(f"Received: {response}")
            except Exception as e:
                print(f"Error waiting for BOOT_OK: {e}")
        else:
            print("Serial port is not open for BOOT_OK waiting.")

    def exit_fullscreen(self, event=None):
        """Kilépés a teljes képernyős módból az Escape billentyűvel."""
        current_os = platform.system()
        if current_os == 'Windows':
            self.master.state('normal')  # Windows
        elif current_os in ['Linux', 'Darwin']:
            self.master.attributes('-fullscreen', False)  # Unix/Linux/Mac

    def create_widgets(self):
        # Grid konfigurálása a középre igazításhoz
        self.master.configure(bg='white')  # Háttérszín beállítása
        self.master.grid_rowconfigure(0, weight=1)
        self.master.grid_columnconfigure(0, weight=1)

        main_frame = tk.Frame(self.master, bg='white')  # Fő keret fehér háttérrel
        main_frame.grid(row=0, column=0, sticky="nsew")
        main_frame.grid_rowconfigure(0, weight=1)
        main_frame.grid_rowconfigure(1, weight=1)
        main_frame.grid_columnconfigure(0, weight=1)

        # Scanned Data Label középre igazítva
        scanned_frame = tk.Frame(main_frame, bg='white')  # Keret fehér háttérrel
        scanned_frame.grid(row=0, column=0, pady=20, padx=20, sticky="nsew")
        scanned_frame.grid_rowconfigure(0, weight=1)
        scanned_frame.grid_columnconfigure(0, weight=1)

        self.scanned_var = tk.StringVar(value="HV")
        scanned_label = tk.Label(
            scanned_frame,
            textvariable=self.scanned_var,
            font=("Arial", 100, "bold"),
            fg='black',
            bg='white',
            anchor='center'
        )
        scanned_label.pack(expand=True)

        # Stripping Length Label középre igazítva
        stripping_frame = tk.Frame(main_frame, bg='white')  # Keret fehér háttérrel
        stripping_frame.grid(row=1, column=0, pady=20, padx=20, sticky="nsew")
        stripping_frame.grid_rowconfigure(0, weight=1)
        stripping_frame.grid_columnconfigure(0, weight=1)

        self.stripping_length_var = tk.StringVar(value="")
        stripping_label = tk.Label(
            stripping_frame,
            textvariable=self.stripping_length_var,
            font=("Arial", 80, "bold"),
            fg='black',
            bg='white',
            anchor='center'
        )
        stripping_label.pack(expand=True)

    def update_scanned_data(self, data):
        """Biztonságos frissítés a 'Scanned Data' címkén."""
        self.scanned_var.set(data)

    def update_stripping_length(self, length):
        """Biztonságos frissítés a 'Stripping Length' címkén."""
        self.stripping_length_var.set(length)

    def run_home_sequence(self):
        """Elküldi a HOME parancsot a soros portra és várja a választ."""
        if self.ser and self.ser.is_open:
            try:
                self.ser.write("HOME".encode('utf-8'))
                print("Sent 'HOME' command.")
                time.sleep(0.1)
                response = self.ser.readline().decode('utf-8', errors='ignore').strip()
                if response:
                    print(f"HOME response: {response}")
                else:
                    print("No response to 'HOME' command.")
            except Exception as e:
                print(f"Error during HOME sequence: {e}")
        else:
            print("Serial port is not open for HOME sequence.")

    # ----------------------------------------------------------------------
    # 1) Here's our new function to fetch manual offset/steps for each KSKNr and P-mod.
    #    This is just a placeholder. In reality, you might load from a separate JSON,
    #    a separate dictionary, or a database. Adapt as needed.
    # ----------------------------------------------------------------------
    def get_manual_offset_and_steps(self, ksk_number, pmod_val):
        """
        Return (offset, steps) for the given KSK number and P-mod.
        You can store these in a JSON, a Python dictionary, or a DB table.
        In this example, we hardcode them for demonstration.
        """

        # Example: you have a dictionary in code or from a JSON file:
        # { ("KSK123", "PMOD5"): (10, 100), ("KSK124", "PMOD8"): (15, 120), ... }
        manual_data = {
            ("100", "ABC"): (10, 100),    # Just an example key-value
            ("200", "XYZ"): (20, 200),
            # ...
        }

        # Convert them to strings just in case
        ksk_str = str(ksk_number)
        pmod_str = str(pmod_val)

        # Try to fetch from the dictionary:
        return manual_data.get((ksk_str, pmod_str), (0, 0))

    # ----------------------------------------------------------------------
    # 2) Updated find_and_save_data to only get P-mod, Ident, etc. from XLSX,
    #    but skip the old offset & steps calculation from the spreadsheet.
    #    Instead, we call get_manual_offset_and_steps.
    # ----------------------------------------------------------------------
    def find_and_save_data(self, input_value):
        """
        Megkeresi a KSKNr-hez tartozó adatokat, elmenti JSON-ba
        és küldi a soros portra. (But uses manual offset/steps now!)
        """
        ksk_row = self.ksk_table[self.ksk_table['KSKNr'] == input_value]
        if not ksk_row.empty:
            # P-mod (Ident) in your KSK sheet
            pmod_val = str(ksk_row['Ident'].iloc[0])  
            
            # Then we search in table_3pass by P-mod
            self.table_3pass.columns = self.table_3pass.columns.str.strip()
            pass_row = self.table_3pass[self.table_3pass['P-mod'] == pmod_val]
            if not pass_row.empty:
                ident_value = str(pass_row['Ident'].iloc[0])
                length = int(pass_row['Stripping length'].iloc[0])

                # ------------------------------------------------------------------
                # Instead of old dynamic logic, let's get a manual offset & steps:
                # ------------------------------------------------------------------
                (manual_offset, manual_steps) = self.get_manual_offset_and_steps(input_value, pmod_val)

                # You decide how to combine them with "length" or not.
                # For example, if you want final_offset to be (length + manual_offset) * manual_steps:
                final_offset = (length + manual_offset) * manual_steps

                print("Ident:", ident_value)
                print("Stripping length from XLSX:", length)
                print("Manual offset:", manual_offset)
                print("Manual steps:", manual_steps)
                print("Final offset (for sending):", final_offset)

                data_to_save = {
                    "Ident": ident_value,
                    "Stripping length": length,
                    "manual_offset": manual_offset,
                    "manual_steps": manual_steps,
                    "final_offset": final_offset
                }

                try:
                    with open('output.json', 'w') as json_file:
                        json.dump(data_to_save, json_file, indent=4)
                    print("output.json successfully saved.")
                except Exception as e:
                    print(f"Error saving output.json: {e}")
                    return

                # JSON előkészítése küldéshez
                to_send = json.dumps({"V": ident_value, "S": str(final_offset)})

                if self.ser and self.ser.is_open:
                    try:
                        self.ser.write(to_send.encode('utf-8'))
                        time.sleep(0.1)
                        response = self.ser.readline().decode('utf-8', errors='ignore').strip()
                        if response:
                            print(f"Serial response: {response}")
                        else:
                            print("No response from serial device.")
                    except Exception as e:
                        print(f"Serial communication error: {e}")
                else:
                    print("Serial port is not open.")

                # Frissítjük a 'Stripping Length' címkét (vagy bármelyik adatot)
                self.update_stripping_length(length)
            else:
                print(f"No matching P-mod in 3pass for {pmod_val}")
                self.update_stripping_length("")
        else:
            print(f"No matching KSK row for KSKNr: {input_value}")
            self.update_stripping_length("")

    def read_from_scanner(self, scanner_device):
        """Folyamatosan olvassa a szkenner bemenetét és feldolgozza a KSKNr-t."""
        try:
            with open(scanner_device, 'rb') as scanner:
                while True:
                    raw_line = scanner.readline()
                    if raw_line:
                        try:
                            decoded_line = raw_line.decode('latin-1', errors='ignore').strip()
                            digits = ''.join(ch for ch in decoded_line if ch.isdigit())
                            if digits:
                                self.update_scanned_data(digits)
                                self.find_and_save_data(int(digits))
                        except Exception as decode_error:
                            print(f"Decoding error: {decode_error}")
                    else:
                        time.sleep(0.1)
        except Exception as e:
            print(f"Error reading from scanner: {e}")

def main():
    root = tk.Tk()
    app = SimpleSerialApp(root)
    root.mainloop()

if __name__ == "__main__":
    main()